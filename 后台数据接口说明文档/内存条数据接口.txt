/**
 * Class Name: MemorybarActionData
 * 功能：该类提供了返回JSON格式的数据接口。
 * 方法名：
 *     1.getAllBrands();
 *         访问地址：.../memorybar/all_brands
 *         携带参数：无
 *         请求类型：POST
 *         说明：该方法返回memorybar的所有品牌。
 *
 *     2.getAllNameByBrand(brand_name)
 *         访问地址：.../memorybar/all_name_by_brand
 *         携带参数：brand_name - 用于指明一个品牌的名称
 *         请求类型：POST
 *         说明：该方法返回 memorybar 指定 品牌名 的所有 系列名
 *
 *     3.getAllModelByBrandAndName(brand_name, name)
 *         访问地址：.../memorybar/all_model_by_brand_name
 *         携带参数：brand_name - 用于指明一个品牌的名称
 *                   name - 用于指明一个品牌下的系列名
 *         请求类型：POST
 *         说明：该方法返回memorybar中指定品牌下系列的所有产品名
 *
 *     4.getAllByPageNumAndSize(pageNum, pageSize)
 *         访问地址：.../memorybar/all_by_num_size
 *         携带参数：pageNum - 需要返回的当前页数值
 *                   pageSize - 当前页面的数据容量
 *         请求类型：POST
 *         说明：该方法返回无选择条件的memorybar信息
 *
 *     5.getAllByWherePageNumAndSize(where_context, pageNum, pageSize)
 *         访问地址：.../memorybar/all_by_condition
 *         携带参数：where_context - 数据筛选条件，如（price<1000 and price not like '%万%'）
 *                   pageNum - 需要返回的当前页数值
 *                   pageSize - 当前页面的数据容量
 *         请求类型：POST
 *         说明：该方法返回按照选择的条件返回相应的memorybar信息
 *
 *     6.deleteById(id)
 *         访问地址：.../memorybar/delete_by_id
 *         携带参数：id - 需要删除的id
 *         请求类型：POST
 *         说明：该方法返回一个字符串，字符串的格式为 信号#原因 例：success#删除成功！或 error#删除失败！原因。。。
 *               开发者使用时首先对返回值进行split('#')处理，先判断split('#')[0]的状态，在输出split('#')[1]中的提示。
 *               split('#')[0] = success为删除成功，split('#')[1] = error为删除失败
 *
 *     7.getOneById(id)
 *         访问地址： .../memorybar/get_one_by_id
 *         携带参数：id - 需要查询的id
 *         请求类型：POST
 *         说明：该方法按照ID返回一个memorybar的信息。如没有找到相关数据，返回空JSON列表。
 *
 * */
